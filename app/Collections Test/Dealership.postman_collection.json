{
	"info": {
		"_postman_id": "4bf0ddef-ab01-4d9b-91a7-de5a279d95ce",
		"name": "Dealership",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "40989168"
	},
	"item": [
		{
			"name": "Cars",
			"item": [
				{
					"name": "Create Car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response contains the created car's data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data).to.have.property(\"_id\");",
									"    pm.expect(jsonData.data).to.have.property(\"make\");",
									"    pm.expect(jsonData.data).to.have.property(\"model\");",
									"    pm.expect(jsonData.data).to.have.property(\"year\");",
									"    pm.expect(jsonData.data).to.have.property(\"seller\");",
									"    pm.expect(jsonData.data).to.have.property(\"price\");",
									"    pm.expect(jsonData.data).to.have.property(\"color\");",
									"    pm.expect(jsonData.data).to.have.property(\"created_at\");",
									"    pm.expect(jsonData.data).to.have.property(\"__v\");",
									"",
									"    if (jsonData.data._id) {",
									"        var carID = jsonData.data._id;",
									"        pm.collectionVariables.set(\"carID\", carID);",
									"    } else {",
									"        console.log(\"Car ID is not defined\");",
									"    }",
									"});",
									"pm.test(\"Created car ID is valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data._id) {",
									"        pm.expect(jsonData.data._id).to.not.be.null;",
									"        pm.expect(jsonData.data._id).to.have.lengthOf(24);",
									"    } else {",
									"        console.log(\"Car ID is not defined\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"car\": {\n    \"make\": \"Honda\",\n    \"model\": \"Accord\",\n    \"year\": 2024,\n    \"seller\": \"John Doe\",\n    \"price\": 60000,\n    \"color\": \"Blue\"\n  }\n}\n\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/cars"
					},
					"response": []
				},
				{
					"name": "Get All Cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response contains data field as an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"pm.test(\"Response contains success field with value true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "localhost:3000/api/v1/cars"
					},
					"response": []
				},
				{
					"name": "Cars by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Car ID is present in the response\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data._id).to.not.be.null;",
									"});",
									"pm.test(\"Response contains valid car object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"GET - REQUEST MADE\");",
									"});",
									"pm.test(\"Response contains valid 'created_at' field with correct format\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.have.property('created_at');",
									"    const createdAt = new Date(responseJson.data.created_at);",
									"    pm.expect(createdAt.getTime()).to.be.a('number');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:3000/api/v1/cars/{{carID}}"
					},
					"response": []
				},
				{
					"name": "Update Car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response contains the updated car's data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data).to.have.property(\"_id\");",
									"    pm.expect(jsonData.data).to.have.property(\"make\");",
									"    pm.expect(jsonData.data).to.have.property(\"model\");",
									"    pm.expect(jsonData.data).to.have.property(\"year\");",
									"    pm.expect(jsonData.data).to.have.property(\"seller\");",
									"    pm.expect(jsonData.data).to.have.property(\"price\");",
									"    pm.expect(jsonData.data).to.have.property(\"color\");",
									"    pm.expect(jsonData.data).to.have.property(\"created_at\");",
									"    pm.expect(jsonData.data).to.have.property(\"__v\");",
									"});",
									"pm.test(\"Status code is 200 for non-existing car\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response contains success field as true and correct message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.message).to.equal(\"Car updated successfully\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"car\": {\n    \"make\": \"Honda\",\n    \"model\": \"Civic\",\n    \"year\": 2025,\n    \"seller\": \"Jhonn Alvarez\",\n    \"price\": 30000,\n    \"color\": \"Black Pearl\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:3000/api/v1/cars/{{carID}}"
					},
					"response": []
				},
				{
					"name": "Delete Car",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Delete operation completes quickly\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); ",
									"});",
									"",
									"pm.test(\"Verify item is deleted after 1 second delay\", function (done) {",
									"",
									"    setTimeout(() => {",
									"        pm.sendRequest({",
									"            url: pm.environment.get(\"base_url\") + \"/api/v1/cars/{{carID}}\", ",
									"            method: \"GET\", ",
									"            header: {",
									"                \"Authorization\": \"Bearer \" + pm.environment.get(\"auth_token\")",
									"            }",
									"        }, function (err, res) {",
									"            if (err) {",
									"                console.error(err);",
									"                done();",
									"                return;",
									"            }",
									"",
									"",
									"            pm.expect(res).to.have.property(\"status\", \"Not Found\");",
									"            pm.expect(res).to.have.status(404);",
									"   ",
									"            const responseJson = res.json();",
									"            pm.expect(responseJson).to.have.property(\"message\", \"Resource not found.\");",
									"            ",
									"            done();  ",
									"        });",
									"    }, 1000);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "localhost:3000/api/v1/cars/{{carID}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "Manufacturer",
			"item": [
				{
					"name": "Get All Manufacturers",
					"request": {
						"method": "GET",
						"header": [],
						"url": "localhost:3000/api/v1/manufacturers/"
					},
					"response": []
				},
				{
					"name": "Manufacturers by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://localhost:3000/api/v1/manufacturers/67d73b0442c3e75e80ab867b"
					},
					"response": []
				},
				{
					"name": "Create Manufacturer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"manufacturer\": {\n    \"name\": \"Subaru\",\n    \"location\": \"Haroshima\",\n    \"revenue\": \"3000000\"\n  }\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:3000/api/v1/manufacturers/"
					},
					"response": []
				},
				{
					"name": "Update Manufacturer",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Honda\",\n  \"location\": \"Nagasaki\",\n  \"revenue\": 50000000\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:3000/api/v1/manufacturers/67d73b0442c3e75e80ab867b"
					},
					"response": []
				},
				{
					"name": "Delete Manufacturer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "localhost:3000/api/v1/manufacturers/67d7574da8f15f384cbcaafc"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "carID",
			"value": ""
		}
	]
}